name: Deploy Hugo site to Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.123.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Checkout code
        uses: actions/checkout@v4  # Utilizando a versão v4 do checkout
        with:
          fetch-depth: 0  # Para garantir que o histórico completo seja baixado
          submodules: false  # Desabilitando submódulos

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4  # Mantendo a versão v4 da configuração de Pages

      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Verify public directory
        run: |
          if [ -d "./public" ]; then
            echo "Directory ./public exists. Listing contents:"
            ls -R ./public  # Lista o conteúdo do diretório public
          else
            echo "Error: ./public directory does not exist!"
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4  # Utilizando a versão v4 para upload de artefatos
        with:
          name: public  # Nome do artefato, garantindo que seja o mesmo nome usado no deploy
          path: ./public  # Caminho do artefato (diretório que contém o build gerado pelo Hugo)

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build  # Garantindo que o deploy só será executado após o build ser concluído
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4  # Utilizando a versão v4 do deploy
        with:
          artifact_name: public  # Referência ao nome do artefato gerado no job de build
